2012-10-23  Philippe Mechaï  <philippe.mechai@gmail.com>

	* debugger/cli.rkt (cli): cli accept a #:complete argument which
	is a procedure called for readline completion

	* debugger/command.rkt (command-list): List of registered commands
	names

	* debugger/core.rkt (complete): Readline completion function that
	completes debugger commands

2012-10-22  Philippe Mechaï  <philippe.mechai@gmail.com>

	* vm/memory.rkt: added load and store function that also increase
	parameter value

	* tests/test-memory.rkt: added test for new load and store
	functions

	* vm/disassembler.rkt (disassemble): use tabs instead of padding

2012-10-21  Philippe Mechaï  <philippe.mechai@gmail.com>

	* vm/core.rkt (fetch-ptr): create ptr to memory location
	(fetch-arg): handle ptr-stx arguments

	* utils/ptr.rkt: struct that emulates a pointer behavior

	* vm/disassembler.rkt: disassembly of ptr-stx args

	* assembler/core.rkt (encode-arg): added encoding of ptr-stx args

	* assembler/parser.rkt (asm-parser): improved parser definition
	and added ptr-stx args

	* tests/test-asm-parser.rkt: added a test for lines starting with
	a label

	* assembler/lexer.rkt (asm-lexer): added open and close paren
	tokens in order to enable ptr like syntax

	* assembler/core.rkt (compute-label-addresses): rewritten to
	compute addresses in one pass.
	(encode-insn): changed a little for better readability

	* assembler/syntax.rkt (ptr-stx): added definition of ptr syntax

2012-10-20  Philippe Mechaï  <philippe.mechai@gmail.com>

	* assembler/core.rkt (compute-offsets): improved compute-offsets
	implementation

	* vm/memory.rkt: fixed create-memory contract

2012-10-19  Philippe Mechaï  <philippe.mechai@gmail.com>

	* utils/bits.rkt: add missing tag function provide 

	* assembler/core.rkt: moved tag method from assembler/core
	and modify call to match signature change

	* utils/bits.rkt (tag): moved tag method from assembler/core

2012-10-18  Philippe Mechaï  <philippe.mechai@gmail.com>

	* assembler/parser.rkt (asm-parser): handle instructions with a
	single numeric argument

	* assembler/asm-parser.rkt (asm-lexer): make ID symbols lowercase

	* debugger/debugger.rkt (register-commands): add missing
	breakpoints related commands

	* debugger/breakpoints.rkt (list-breakpoints): list all defined
	breakpoints along with their status

2012-10-16  Philippe Mechaï  <philippe.mechai@gmail.com>

	* vmdb.rkt (command-handlers): Added new commands for breakpoints
	(cmd-break): Initial implementation of breakpoints
	(continue): Like vm::run but with breakpoint awareness

	* private/vm.rkt (print-registers): Make radix argument default to
	10.
	Make most used registers available as global variables to reduce
	number of lookups.

2012-10-14  Philippe Mechaï  <philippe.mechai@gmail.com>

	* vmdb.rkt (do-print): rename calls from dump-reg... to
	print-reg...and pass new radix argument

	* private/vm.rkt (print-register): added a radix argument to print
	register values in different radixes (used by vmdb)

	* private/registers.rkt (register->bytecode): return false if no
	register matching given symbol could be found

	* vmdb.rkt (cmd-disasm): implementation of disasm command

	* private/disassembler.rkt (disassemble): now return #f at end of
	program.

	* private/vm.rkt (execute): fixed use of case which lead to a
	serious regression

	* private/opcodes.rkt: added an opcode->symbol function that
	convert bytecode to an instruction symbol

	* private/disassembler.rkt: bytecode disassembler

	* private/opcodes.rkt (opcode->string): new function that convert
	a bytecode encoded opcode to its string representation (i.e.
	instruction name)

	* private/vm.rkt: removed untag and clear-tags functions

	* private/bits.rkt: bit related utilities (extracted from vm.rkt)

2012-10-05  Philippe Mechaï  <philippe.mechai@gmail.com>

	* vmdb.rkt: Initial debugger implementation

2012-10-02  Philippe Mechaï  <philippe.mechai@gmail.com>

	* private/vm.rkt (flag-set?): Fix bug introduced in
	refactoring (bit parameter was erroenously shifted !!!)
	(dump-registers): New function that dump registers
	to (current-output-port)

2012-10-01  Philippe Mechaï  <philippe.mechai@gmail.com>

	* private/vm.rkt (step): Added implementation of PUSH and POP.
	Implemented CALL and RET
	(execute): Moved opcode execution in a separate function and fixed
	PUSH and POP calls
	Implemented missing opcodes (namely CMP and dependent jumps)

	* private/opcodes.rkt: Added constants for opcodes

2012-10-01  Philippe Mechaï  <philippe.mechai@gmail.com>

	* private/vm.rkt (initialize-registers): Initialize IP, SP and BP
	after a program has been loaded

2012-09-30  Philippe Mechaï  <philippe.mechai@gmail.com>

	* private/vm.rkt (run): Initial implementation

	* private/opcodes.rkt (opcodes): fix argument count of SHL and SHR
	opcodes

	* vmas.rkt (main): add forgotten call to (write-bytes)
	on (compile-file) output

	* private/assembler.rkt
	(compute-label-addresses): now call a function that compute
	instruction list lines offsets to fix a bug in label to address
	translation.
	(compute-offsets): New function that compute offset of lines in
	instruction list
	(encode): Do not encode labels as nop instructions anymore
	(encode-insn): When encoding opcode the tag was not applied to the
	written opcode

2012-09-26  Philippe Mechaï  <philippe.mechai@gmail.com>

	* private/assembler.rkt (encode-arg): reflect label syntax change
	in asm-parser
	(integer->s16bytes, integer->s64bytes): fix bug in encoding

	* private/asm-parser.rkt (asm-parser): make label references
	syntax return a string instead of a symbol

	* compiler.rkt: Complete implementation of the compiler

2012-09-25  Philippe Mechaï  <philippe.mechai@gmail.com>

	* parser.rkt: improved parsing (still a bug when there is no
	newline at end of file)

2012-09-24  Philippe Mechaï  <philippe.mechai@gmail.com>

	* parser.rkt: parser implementation

